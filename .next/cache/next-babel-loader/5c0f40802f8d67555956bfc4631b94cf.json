{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/inbaeyoon/Desktop/Next.js-tutorial/pages/p/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nexport default function Post(context) {\n  var router = useRouter();\n  console.log(context);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, router.query.id), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"This is the blog post content.\"));\n}\n\nPost.getInitialProps = function _callee(context) {\n  var id, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/shows/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json);\n\n        case 6:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {});\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/Users/inbaeyoon/Desktop/Next.js-tutorial/pages/p/[id].js"],"names":["useRouter","Layout","fetch","Post","context","router","console","log","query","id","getInitialProps","res","json","data"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,eAAe,SAASC,IAAT,CAAcC,OAAd,EAAuB;AACpC,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,MAAM,CAACG,KAAP,CAAaC,EAAlB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFF,CADF;AAMD;;AAEDN,IAAI,CAACO,eAAL,GAAuB,iBAAeN,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACbK,UAAAA,EADa,GACNL,OAAO,CAACI,KADF,CACbC,EADa;AAAA;AAAA,2CAEHP,KAAK,wCAAiCO,EAAjC,EAFF;;AAAA;AAEfE,UAAAA,GAFe;AAAA;AAAA,2CAGFA,GAAG,CAACC,IAHF;;AAAA;AAGfC,UAAAA,IAHe;AAAA,2CAId,EAJc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import { useRouter } from 'next/router';\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nexport default function Post(context) {\n  const router = useRouter();\n  console.log(context);\n  return (\n    <Layout>\n      <h1>{router.query.id}</h1>\n      <p>This is the blog post content.</p>\n    </Layout>\n  );\n}\n\nPost.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const data = await res.json;\n  return {};\n};\n"]},"metadata":{},"sourceType":"module"}