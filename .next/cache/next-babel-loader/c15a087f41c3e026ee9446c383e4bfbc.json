{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/inbaeyoon/Desktop/Next.js-tutorial/pages/p/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nexport default function Post(props) {\n  var router = useRouter();\n  var show = props.show;\n  console.log(show);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, show.name), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, show.summary.replace(/<[/]?[pb]>/g, '')), __jsx(\"img\", {\n    src: show.image.medium,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n}\n\nPost.getInitialProps = function _callee(context) {\n  var id, res, show;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/shows/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          show = _context.sent;\n          console.log(\"Fetched show: \".concat(show.name));\n          return _context.abrupt(\"return\", {\n            show: show\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/Users/inbaeyoon/Desktop/Next.js-tutorial/pages/p/[id].js"],"names":["useRouter","Layout","fetch","Post","props","router","show","console","log","name","summary","replace","image","medium","getInitialProps","context","id","query","res","json"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AADkC,MAE1BM,IAF0B,GAEjBF,KAFiB,CAE1BE,IAF0B;AAGlCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACG,IAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,IAAI,CAACI,OAAL,CAAaC,OAAb,CAAqB,aAArB,EAAoC,EAApC,CAAJ,CAFF,EAGE;AAAK,IAAA,GAAG,EAAEL,IAAI,CAACM,KAAL,CAAWC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD;;AAEDV,IAAI,CAACW,eAAL,GAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,UAAAA,EADa,GACND,OAAO,CAACE,KADF,CACbD,EADa;AAAA;AAAA,2CAEHd,KAAK,wCAAiCc,EAAjC,EAFF;;AAAA;AAEfE,UAAAA,GAFe;AAAA;AAAA,2CAGFA,GAAG,CAACC,IAAJ,EAHE;;AAAA;AAGfb,UAAAA,IAHe;AAKrBC,UAAAA,OAAO,CAACC,GAAR,yBAA6BF,IAAI,CAACG,IAAlC;AALqB,2CAMd;AACLH,YAAAA,IAAI,EAAJA;AADK,WANc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import { useRouter } from 'next/router';\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nexport default function Post(props) {\n  const router = useRouter();\n  const { show } = props;\n  console.log(show);\n  return (\n    <Layout>\n      <h1>{show.name}</h1>\n      <p>{show.summary.replace(/<[/]?[pb]>/g, '')}</p>\n      <img src={show.image.medium}></img>\n    </Layout>\n  );\n}\n\nPost.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json();\n\n  console.log(`Fetched show: ${show.name}`);\n  return {\n    show\n  };\n};\n"]},"metadata":{},"sourceType":"module"}